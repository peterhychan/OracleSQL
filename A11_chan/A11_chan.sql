set echo on
set feedback 1
set pagesize 999
set trimspool on
set lINesize 200
set tab off
clear columns


/* Ho Yeung Chan */

/*  TASK 00 */
SELECT user, sysdate 
FROM dual;

/*  TASK 01 */
SELECT CUS.CUST_ID AS "Cust_ID"
, CUS.CUST_NAME_LAST AS "Cust_Name_Last"
, COALESCE((SELECT count(ORH.ORDER_ID)
	  FROM BK_ORDER_HEADERS ORH
	  WHERE CUS.CUST_ID = ORH.CUST_ID),0) AS "Number Of Orders"
FROM BK_CUSTOMERS CUS
WHERE CUS.CUST_STATE IN ('NJ', 'MA')
;

/*  TASK 02  */

SELECT BOOK_ID
, TITLE
FROM BK_BOOKS
WHERE LIST_PRICE > (
	SELECT AVG(LIST_PRICE)*2
	FROM BK_BOOKS
	)
AND BOOK_ID IN (
	SELECT BOOK_ID
	FROM BK_ORDER_DETAILS
	WHERE QUANTITY >0
	)
;

/*  TASK 03 */
SELECT 
SUM(CASE WHEN TO_CHAR(ORDER_DATE , 'Q') ='1'
	THEN 1 ELSE 0 END) AS "Qrt1"
,SUM(CASE WHEN TO_CHAR(ORDER_DATE , 'Q') ='2'
	THEN 1 ELSE 0 END) AS "Qrt2"
,SUM(CASE WHEN TO_CHAR(ORDER_DATE , 'Q') ='3'
	THEN 1 ELSE 0 END) AS "Qrt3"
,SUM(CASE WHEN TO_CHAR(ORDER_DATE , 'Q') ='4'
	THEN 1 ELSE 0 END) AS "Qrt4"
,COUNT(ORDER_ID) AS "AllQuarters"
FROM BK_ORDER_HEADERS
WHERE EXTRACT(YEAR FROM ORDER_DATE)= EXTRACT(YEAR FROM SYSDATE)-1
;


/*  TASK 04 */ 
SELECT CUS.CUST_ID AS "Cust_ID"
, CUS.CUST_NAME_LAST AS "Cust_Name_LASt"
FROM BK_CUSTOMERS CUS
WHERE EXISTS (
	SELECT 1 
	FROM BK_ORDER_HEADERS ORH
	WHERE ORH.CUST_ID = CUS.CUST_ID
	AND TO_CHAR(ORH.ORDER_DATE, 'YYYY/MM') = (TO_CHAR(sysdate, 'YYYY') || '/01')
	)
AND EXISTS (
	SELECT 2
	FROM BK_ORDER_HEADERS ORH
	WHERE ORH.CUST_ID = CUS.CUST_ID
	AND TO_CHAR(ORH.ORDER_DATE, 'YYYY/MM') = (TO_CHAR(sysdate, 'YYYY') || '/02')
	)
AND EXISTS (
	SELECT 3
	FROM BK_ORDER_HEADERS ORH
	WHERE ORH.CUST_ID = CUS.CUST_ID
	AND TO_CHAR(ORH.ORDER_DATE, 'YYYY/MM') = (TO_CHAR(sysdate, 'YYYY') || '/03')
	)
ORDER BY CUS.CUST_ID
;

/*  TASK 05 */
WITH AUTHOR_BOOKS AS(
	SELECT TMP.AUTHOR_ID
	, (SELECT AUT.AUTHOR_NAME_FIRST 
	FROM BK_AUTHORS AUT
	WHERE AUT.AUTHOR_ID = TMP.AUTHOR_ID) AS AUTHOR_NAME_FIRST
	, (SELECT AUT.AUTHOR_NAME_LAST 
	FROM BK_AUTHORS AUT
	WHERE AUT.AUTHOR_ID = TMP.AUTHOR_ID) AS AUTHOR_NAME_LAST
	, Number_Of_Books
	FROM(SELECT AUTHOR_ID
		, count(BOOK_ID) AS Number_Of_Books
		FROM BK_BOOK_AUTHORS
		GROUP BY AUTHOR_ID) TMP)
SELECT AUB.AUTHOR_NAME_FIRST AS "Author_Name_First"
, AUB.AUTHOR_NAME_LAST AS "Author_Name_LASt"
, AUB.AUTHOR_ID AS "Author_ID"
FROM AUTHOR_BOOKS AUB
WHERE AUB.NUMBER_OF_BOOKS >= 2
AND NOT EXISTS(
	SELECT 1
	FROM BK_BOOK_AUTHORS BAU
	WHERE BAU.AUTHOR_ID = AUB.AUTHOR_ID
	AND EXISTS(
		SELECT 1
		FROM BK_ORDER_DETAILS ORD
		WHERE ORD.BOOK_ID = BAU.BOOK_ID))
ORDER BY AUB.AUTHOR_ID
;

/*  TASK 06 */
WITH SQL_TOPIC_BOOKS AS(
	SELECT TOP.BOOK_ID
	, count(TOP.TOPIC_ID) AS NUMBER_OF_TOPICS
	FROM BK_BOOK_TOPICS TOP
	WHERE TOPIC_ID in ('SSRV', 'ORA', 'MYSQL')
	GROUP BY TOP.BOOK_ID)
SELECT STB.BOOK_ID
	, (SELECT BOK.TITLE
	FROM BK_BOOKS BOK
	WHERE BOK.BOOK_ID = STB.BOOK_ID) AS Title
FROM SQL_TOPIC_BOOKS STB
WHERE STB.NUMBER_OF_TOPICS = 2
;	

/*  TASK 07 */
SELECT ORH.ORDER_DATE AS "OrderDate"
, ORH.ORDER_ID AS "Order ID"
, ORH.CUST_ID AS "Customer ID"
, (SELECT CUST_NAME_LAST 
   FROM BK_CUSTOMERS CUS
   WHERE CUS.CUST_ID = ORH.CUST_ID) AS "Customer"
, (SELECT sum(nvl(ORD.QUANTITY, 0)) 
   FROM BK_ORDER_DETAILS ORD 
   WHERE ORD.ORDER_ID = ORH.ORDER_ID) AS "NumberBooks"
, (SELECT sum(nvl(ORD.QUANTITY, 0) * nvl(ORDER_PRICE, 0))  
   FROM BK_ORDER_DETAILS ORD 
   WHERE ORD.ORDER_ID = ORH.ORDER_ID) AS "OrderCost"
FROM BK_ORDER_HEADERS ORH
WHERE EXTRACT(YEAR FROM ORH.ORDER_DATE) = EXTRACT(YEAR FROM SYSDATE) - 1
AND EXTRACT(month FROM ORH.ORDER_DATE) 
BETWEEN 1 AND 3
ORDER BY ORH.ORDER_DATE
; 


/*  TASK 08 */
WITH PREVYEAR_CUSTER_ORDERS AS(
	SELECT ORH.CUST_ID
	, COUNT(ORH.ORDER_ID) AS NUMBER_OF_ORDERS
	FROM BK_ORDER_HEADERS ORH
	WHERE EXTRACT(YEAR FROM ORH.ORDER_DATE) = EXTRACT(YEAR FROM SYSDATE) - 1
	GROUP BY ORH.CUST_ID)
SELECT CUS.CUST_ID
, CUS.CUST_NAME_LAST
FROM BK_CUSTOMERS CUS
WHERE CUS.CUST_ID in(
	SELECT PCO.CUST_ID
	FROM PREVYEAR_CUSTER_ORDERS PCO
	WHERE PCO.NUMBER_OF_ORDERS BETWEEN 3 AND 5)
ORDER BY CUS.CUST_ID
;

/*  TASK 09 */
SELECT CUST_ID
, CUST_NAME_LAST
FROM BK_CUSTOMERS
WHERE CUST_ID IN (
	SELECT STATS_MODE(CUST_ID) 
	FROM BK_ORDER_HEADERS
	WHERE EXTRACT(YEAR FROM ORDER_DATE) = EXTRACT(YEAR FROM SYSDATE)-1
);

/*  TASK 10 */
WITH QUARTERLY_CUSTER_ORDERS AS(
	SELECT ORH.CUST_ID
	, TO_CHAR(ORH.ORDER_DATE, 'YYYY') AS YEAR
	, TO_CHAR(ORH.ORDER_DATE, 'Q') AS QUARTER
	, COUNT(ORH.ORDER_ID) AS NUMBER_OF_ORDERS
	FROM BK_ORDER_HEADERS ORH
	GROUP BY ORH.CUST_ID
	, TO_CHAR(ORH.ORDER_DATE, 'YYYY') 
	, TO_CHAR(ORH.ORDER_DATE, 'Q'))
SELECT CUS.CUST_ID
, CUS.CUST_NAME_LAST
FROM BK_CUSTOMERS CUS
WHERE EXISTS(
	SELECT 1
	FROM QUARTERLY_CUSTER_ORDERS PYQCO
	WHERE PYQCO.YEAR = TO_CHAR(EXTRACT(YEAR FROM SYSDATE) - 1)
	AND PYQCO.QUARTER = '1'
	AND PYQCO.CUST_ID = CUS.CUST_ID
AND EXISTS(
	SELECT 2
	FROM QUARTERLY_CUSTER_ORDERS CYQCO
	WHERE CYQCO.YEAR = TO_CHAR(SYSDATE, 'YYYY')
	AND CYQCO.QUARTER = '1'
	AND CYQCO.CUST_ID = PYQCO.CUST_ID
	AND PYQCO.NUMBER_OF_ORDERS >= PYQCO.NUMBER_OF_ORDERS))
ORDER BY CUS.CUST_ID
;	


